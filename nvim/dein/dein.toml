[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
    let g:ale_statusline_format = ['✗ %d', '⚠ %d', '✓ ok']
    let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
    let g:ale_sign_column_always = 1
    let g:ale_set_loclist = 0
    let g:ale_set_quickfix = 1
    let g:ale_sign_error = '✗'
    "let g:ale_sign_warning = '⚠'
    let g:ale_fixers = {
    \   '*': ['remove_trailing_lines', 'trim_whitespace'],
    \}
    let g:ale_linters = {
    \   'python': ['flake8'],
    \}
    nmap <silent> <C-j> <Plug>(ale_previous_wrap)
    nmap <silent> <C-k> <Plug>(ale_next_wrap)
    '''

# patch for colorscheme
# [[plugins]]
# repo = 'delphinus/lightline-delphinus'

 [[plugins]]
 repo = 'itchyny/lightline.vim'
 hook_add = '''
    let g:lightline = {
     \   'colorscheme': 'powerline',
     \   'mode_map': {'c': 'NORMAL'},
     \   'subseparator': { 'left': '>', 'right': '<' },
     \}
    let g:lightline.active = {
    \       'left': [ [ 'mode', 'paste' ],
    \                 [ 'readonly', 'fugitive', 'filename', 'modified'] ]
    \ }
    let g:lightline.component_function = {
    \        'fugitive': 'LightlineFugitive'
    \ }
    function! LightlineFugitive()
        if &ft !~? 'vimfiler\|gundo' && exists('*fugitive#head')
            return fugitive#head()
        else
            return ''
        endif
    endfunction
     '''

[[plugins]]
repo = 'tpope/vim-fugitive'

# [[plugins]]
# repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'morhetz/gruvbox'
hook_post_source = '''
    syntax enable
    set background=dark
    '''
hook_add = '''
    colorscheme gruvbox
    let g:lightline[ 'colorscheme' ] = 'gruvbox'
    '''

# [[plugins]]
# repo = 'altercation/vim-colors-solarized'
# hook_post_source = '''
#     syntax enable
#     set background=dark
#     colorscheme solarized
#     let g:lightline[ 'colorscheme' ] = 'solarized'
#     '''

# [[plugins]]
# repo = 'sickill/vim-monokai'
# hook_post_source = '''
#     colorscheme monokai
#     '''

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
" vim-indent-guides
" Vim 起動時 vim-indent-guides を自動起動
let g:indent_guides_enable_on_vim_startup=1
" Disable on help anda NerdTree
let g:indent_guides_exclude_filetypes = ['help', 'nerdtree']
" ガイドをスタートするインデントの量
let g:indent_guides_start_level=2
" 自動カラー無効
let g:indent_guides_auto_colors=0
" 奇数番目のインデントの色 -> solarized base02
" autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=#073642 ctermbg=0
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd ctermbg=236
" 偶数番目のインデントの色 -> solarized base01
" autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=#586e75 ctermbg=8
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=237
" ガイドの幅
let g:indent_guides_guide_size = 1
'''

# [[plugins]]
# repo = 'Yggdroot/indentLine'
# hook_add = '''
#     let g:indentLine_setColors = 0
#     let g:indentLine_char = '┆'
#     '''

##非同期処理をするために必要
##要ビルド
[[plugins]]
repo = 'Shougo/vimproc'
build = 'make'
hook_post_update = '''
  if dein#util#_is_windows()
      let cmd = 'tools\\update-dll-mingw'
  elseif dein#util#_is_cygwin()
      let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
      let cmd = 'gmake'
  else
      let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''


[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'jiangmiao/auto-pairs'
hook_add = '''
    let g:AutoPairsFlyMode = 0
    let g:AutoPairsShortcutBackInsert = '<M-b>'
    '''
